/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetImport } from './routes/reset'
import { Route as MemoizedImport } from './routes/memoized'
import { Route as FormwatchImport } from './routes/formwatch'
import { Route as FormstateImport } from './routes/formstate'
import { Route as FieldstateImport } from './routes/fieldstate'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ResetRoute = ResetImport.update({
  id: '/reset',
  path: '/reset',
  getParentRoute: () => rootRoute,
} as any)

const MemoizedRoute = MemoizedImport.update({
  id: '/memoized',
  path: '/memoized',
  getParentRoute: () => rootRoute,
} as any)

const FormwatchRoute = FormwatchImport.update({
  id: '/formwatch',
  path: '/formwatch',
  getParentRoute: () => rootRoute,
} as any)

const FormstateRoute = FormstateImport.update({
  id: '/formstate',
  path: '/formstate',
  getParentRoute: () => rootRoute,
} as any)

const FieldstateRoute = FieldstateImport.update({
  id: '/fieldstate',
  path: '/fieldstate',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/fieldstate': {
      id: '/fieldstate'
      path: '/fieldstate'
      fullPath: '/fieldstate'
      preLoaderRoute: typeof FieldstateImport
      parentRoute: typeof rootRoute
    }
    '/formstate': {
      id: '/formstate'
      path: '/formstate'
      fullPath: '/formstate'
      preLoaderRoute: typeof FormstateImport
      parentRoute: typeof rootRoute
    }
    '/formwatch': {
      id: '/formwatch'
      path: '/formwatch'
      fullPath: '/formwatch'
      preLoaderRoute: typeof FormwatchImport
      parentRoute: typeof rootRoute
    }
    '/memoized': {
      id: '/memoized'
      path: '/memoized'
      fullPath: '/memoized'
      preLoaderRoute: typeof MemoizedImport
      parentRoute: typeof rootRoute
    }
    '/reset': {
      id: '/reset'
      path: '/reset'
      fullPath: '/reset'
      preLoaderRoute: typeof ResetImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/fieldstate': typeof FieldstateRoute
  '/formstate': typeof FormstateRoute
  '/formwatch': typeof FormwatchRoute
  '/memoized': typeof MemoizedRoute
  '/reset': typeof ResetRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/fieldstate': typeof FieldstateRoute
  '/formstate': typeof FormstateRoute
  '/formwatch': typeof FormwatchRoute
  '/memoized': typeof MemoizedRoute
  '/reset': typeof ResetRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/fieldstate': typeof FieldstateRoute
  '/formstate': typeof FormstateRoute
  '/formwatch': typeof FormwatchRoute
  '/memoized': typeof MemoizedRoute
  '/reset': typeof ResetRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/fieldstate'
    | '/formstate'
    | '/formwatch'
    | '/memoized'
    | '/reset'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/fieldstate' | '/formstate' | '/formwatch' | '/memoized' | '/reset'
  id:
    | '__root__'
    | '/'
    | '/fieldstate'
    | '/formstate'
    | '/formwatch'
    | '/memoized'
    | '/reset'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FieldstateRoute: typeof FieldstateRoute
  FormstateRoute: typeof FormstateRoute
  FormwatchRoute: typeof FormwatchRoute
  MemoizedRoute: typeof MemoizedRoute
  ResetRoute: typeof ResetRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FieldstateRoute: FieldstateRoute,
  FormstateRoute: FormstateRoute,
  FormwatchRoute: FormwatchRoute,
  MemoizedRoute: MemoizedRoute,
  ResetRoute: ResetRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/fieldstate",
        "/formstate",
        "/formwatch",
        "/memoized",
        "/reset"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/fieldstate": {
      "filePath": "fieldstate.tsx"
    },
    "/formstate": {
      "filePath": "formstate.tsx"
    },
    "/formwatch": {
      "filePath": "formwatch.tsx"
    },
    "/memoized": {
      "filePath": "memoized.tsx"
    },
    "/reset": {
      "filePath": "reset.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
